name: Build ioq3ztm

on:
  push:
  pull_request:

jobs:
  linux-qvm:
    name: Native Build Linux + QVMs
    runs-on: ubuntu-latest
    outputs:
      qvm-artifact-name: baseq3-qvms
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Linux dependencies (SDL 1.2)
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            build-essential \
            libsdl1.2-dev \
            libopenal-dev \
            libogg-dev \
            libvorbis-dev \
            libpng-dev \
            libfreetype6-dev || true

      - name: Build engine + QVMs
        run: |
          export CFLAGS="$(sdl-config --cflags) -Wno-error"
          export LDFLAGS="$(sdl-config --libs)"
          make BUILD_GAME_QVM=1

      - name: Strip binaries
        run: |
          find build/release* -type f -name 'ioq3*' -exec strip {} \; || true

      - name: Upload baseq3 QVMs
        uses: actions/upload-artifact@v4
        with:
          name: baseq3-qvms
          path: build/release*/baseq3/vm/*.qvm
          
      - name: Upload missionpack QVMs
        uses: actions/upload-artifact@v4
        with:
          name: missionpack-qvms
          path: build/release*/missionpack/vm/*.qvm

      - name: Upload Linux binaries
        uses: actions/upload-artifact@v4
        with:
          name: ioq3ztm-linux
          path: |
            build/release*/ioq3*
            build/release*/renderer_opengl*
            build/release*/cgame*
            build/release*/qagame*

  native-build-windows:
    name: Native Build Windows
    runs-on: windows-latest
    needs: linux-qvm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MSYS2 dependencies (SDL 1.2)
        uses: msys2/setup-msys2@v2
        with:
          update: false
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-SDL
            mingw-w64-x86_64-openal
            mingw-w64-x86_64-libpng
            make
          msystem: MINGW64

      - name: Download baseq3 QVMs
        uses: actions/download-artifact@v4
        with:
          name: baseq3-qvms
          path: baseq3
      
      - name: Download missionpack QVMs
        uses: actions/download-artifact@v4
        with:
          name: missionpack-qvms
          path: missionpack

      - name: Build engine
        shell: msys2 {0}
        run: make PLATFORM=mingw32

      - name: Strip binaries
        shell: msys2 {0}
        run: |
          for f in build/release*/ioq3*.exe build/release*/renderer_opengl*.dll build/release*/cgame*.dll build/release*/qagame*.dll; do
            [ -f "$f" ] && strip "$f"
          done || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ioq3ztm-windows
          path: |
            build/release*/ioq3*.exe
            build/release*/renderer_opengl*.dll
            build/release*/cgame*.dll
            build/release*/qagame*.dll
            build/release*/baseq3/vm/*.qvm
            build/release*/missionpack/vm/*.qvm

  native-build-macos:
    name: Native Build macOS
    runs-on: macos-latest
    needs: linux-qvm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install macOS dependencies (SDL 1.2 via sdl12-compat)
        run: |
          brew install sdl12-compat openal-soft || true

      - name: Download baseq3 QVMs
        uses: actions/download-artifact@v4
        with:
          name: baseq3-qvms
          path: baseq3
      
      - name: Download missionpack QVMs
        uses: actions/download-artifact@v4
        with:
          name: missionpack-qvms
          path: missionpack

      - name: Make macOS compile scripts executable
        run: chmod +x ./make-macosx.sh && chmod +x ./make-macosx-ub.sh

      - name: Build i386 macOS binary
        env:
          CFLAGS: "-I/usr/local/include/SDL"
          LDFLAGS: "-L/usr/local/lib -lSDLmain -lSDL -framework OpenAL"
        run: ./make-macosx.sh i386

      - name: Build x86_64 macOS binary
        env:
          CFLAGS: "-I/usr/local/include/SDL"
          LDFLAGS: "-L/usr/local/lib -lSDLmain -lSDL -framework OpenAL"
        run: ./make-macosx.sh x86_64

      - name: Build PPC macOS binary
        env:
          CFLAGS: "-I/usr/local/include/SDL"
          LDFLAGS: "-L/usr/local/lib -lSDLmain -lSDL -framework OpenAL"
        run: ./make-macosx.sh ppc

      - name: Build Universal Binary
        env:
          CFLAGS: "-I/usr/local/include/SDL"
          LDFLAGS: "-L/usr/local/lib -lSDLmain -lSDL -framework OpenAL"
        run: ./make-macosx-ub.sh

      - name: Strip binaries
        run: |
          find build/release* -type f -name 'ioq3*' -exec strip {} \; || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ioq3ztm-macos
          path: |
            build/release*/ioq3*
            build/release*/renderer_opengl*
            build/release*/cgame*
            build/release*/qagame*
            build/release*/baseq3/vm/*.qvm
            build/release*/missionpack/vm/*.qvm
            build/universal/*

  cross-build-windows-x86:
    name: Cross-compile Windows x86
    runs-on: ubuntu-latest
    needs: linux-qvm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MinGW-w64 (32-bit)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-mingw-w64-i686 \
            g++-mingw-w64-i686 \
            sdl-mingw-w64-i686 \
            binutils-mingw-w64 || true

      - name: Download baseq3 QVMs
        uses: actions/download-artifact@v4
        with:
          name: baseq3-qvms
          path: baseq3

      - name: Download missionpack QVMs
        uses: actions/download-artifact@v4
        with:
          name: missionpack-qvms
          path: missionpack

      - name: Cross-compile engine x86
        run: |
          chmod +x ./cross-make-mingw.sh
          export CC=i686-w64-mingw32-gcc
          export CXX=i686-w64-mingw32-g++
          export STRIP=i686-w64-mingw32-strip
          export WINDRES=i686-w64-mingw32-windres
          export CFLAGS="-I/usr/i686-w64-mingw32/include/SDL -mwindows"
          export LDFLAGS="-L/usr/i686-w64-mingw32/lib -lSDLmain -lSDL -lcurl -mwindows"
          ./cross-make-mingw.sh PLATFORM=mingw32 ARCH=i686

      - name: Strip binaries
        run: |
          for f in build/release*/ioq3*.exe build/release*/renderer_opengl*.dll build/release*/cgame*.dll build/release*/qagame*.dll; do
            [ -f "$f" ] && i686-w64-mingw32-strip "$f"
          done || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ioq3ztm-windows-i686
          path: |
            build/release*/ioq3*.exe
            build/release*/renderer_opengl*.dll
            build/release*/cgame*.dll
            build/release*/qagame*.dll
            build/release*/baseq3/vm/*.qvm
            build/release*/missionpack/vm/*.qvm

  cross-build-windows-x64:
    name: Cross-compile Windows x64
    runs-on: ubuntu-latest
    needs: linux-qvm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MinGW-w64 (64-bit)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-mingw-w64-x86-64 \
            g++-mingw-w64-x86-64 \
            sdl-mingw-w64-x86-64 \
            binutils-mingw-w64 || true

      - name: Download baseq3 QVMs
        uses: actions/download-artifact@v4
        with:
          name: baseq3-qvms
          path: baseq3

      - name: Download missionpack QVMs
        uses: actions/download-artifact@v4
        with:
          name: missionpack-qvms
          path: missionpack

      - name: Cross-compile engine x64
        run: |
          chmod +x ./cross-make-mingw64.sh
          export CC=x86_64-w64-mingw32-gcc
          export CXX=x86_64-w64-mingw32-g++
          export STRIP=x86_64-w64-mingw32-strip
          export WINDRES=x86_64-w64-mingw32-windres
          export CFLAGS="-I/usr/x86_64-w64-mingw32/include/SDL -mwindows"
          export LDFLAGS="-L/usr/x86_64-w64-mingw32/lib -lSDLmain -lSDL -lcurl -mwindows"
          ./cross-make-mingw64.sh PLATFORM=mingw32 ARCH=x86_64

      - name: Strip binaries
        run: |
          for f in build/release*/ioq3*.exe build/release*/renderer_opengl*.dll build/release*/cgame*.dll build/release*/qagame*.dll; do
            [ -f "$f" ] && x86_64-w64-mingw32-strip "$f"
          done || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ioq3ztm-windows-x86_64
          path: |
            build/release*/ioq3*.exe
            build/release*/renderer_opengl*.dll
            build/release*/cgame*.dll
            build/release*/qagame*.dll
            build/release*/baseq3/vm/*.qvm
            build/release*/missionpack/vm/*.qvm
