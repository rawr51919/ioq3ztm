name: Build ioq3ztm

on:
  push:
  pull_request:

jobs:
  linux-qvm:
    name: Build QVMs (Linux)
    runs-on: ubuntu-latest
    outputs:
      qvm-artifact-name: baseq3-qvms
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Linux dependencies (SDL 1.2)
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            build-essential \
            libsdl1.2-dev \
            libopenal-dev \
            libogg-dev \
            libvorbis-dev \
            libpng-dev \
            libfreetype6-dev || true

      - name: Build engine + QVMs
        run: |
          export CFLAGS="$(sdl-config --cflags) -Wno-error"
          export LDFLAGS="$(sdl-config --libs)"
          make BUILD_GAME_QVM=1

      - name: Strip binaries
        run: |
          find build/release* -type f -name 'ioq3*' -exec strip {} \; || true

      - name: Upload QVMs
        uses: actions/upload-artifact@v4
        with:
          name: baseq3-qvms
          path: baseq3/*.qvm

      - name: Upload Linux binaries
        uses: actions/upload-artifact@v4
        with:
          name: ioq3ztm-linux
          path: |
            build/release*/ioq3*
            build/release*/renderer_opengl*
            build/release*/cgame*
            build/release*/qagame*

  native-build-windows:
    name: Native Build Windows
    runs-on: windows-latest
    needs: linux-qvm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MSYS2 dependencies (SDL 1.2)
        uses: msys2/setup-msys2@v2
        with:
          update: false
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-SDL
            mingw-w64-x86_64-openal
            mingw-w64-x86_64-libpng
            make
          msystem: MINGW64

      - name: Download QVMs
        uses: actions/download-artifact@v4
        with:
          name: baseq3-qvms
          path: baseq3

      - name: Build engine
        shell: msys2 {0}
        run: make

      - name: Strip binaries
        shell: msys2 {0}
        run: |
          for f in build/release*/ioq3*.exe build/release*/renderer_opengl*.dll build/release*/cgame*.dll build/release*/qagame*.dll; do
            [ -f "$f" ] && strip "$f"
          done || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ioq3ztm-windows
          path: |
            build/release*/ioq3*.exe
            build/release*/renderer_opengl*.dll
            build/release*/cgame*.dll
            build/release*/qagame*.dll
            baseq3/*.qvm

  native-build-macos:
    name: Native Build macOS
    runs-on: macos-latest
    needs: linux-qvm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install macOS dependencies (SDL 1.2)
        run: brew install sdl@1 openal-soft libpng freetype

      - name: Download QVMs
        uses: actions/download-artifact@v4
        with:
          name: baseq3-qvms
          path: baseq3

      - name: Build engine
        run: |
          export CFLAGS="$(sdl-config --cflags) -Wno-error"
          export LDFLAGS="$(sdl-config --libs)"
          make

      - name: Strip binaries
        run: |
          find build/release* -type f -name 'ioq3*' -exec strip {} \; || true

      - name: Build Universal Binary
        run: ./make-macosx-ub.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ioq3ztm-macos
          path: |
            build/release*/ioq3*
            build/release*/renderer_opengl*
            build/release*/cgame*
            build/release*/qagame*
            baseq3/*.qvm
            build/universal/*

  cross-build-windows:
    name: Cross-compile Windows from Linux
    runs-on: ubuntu-latest
    needs: linux-qvm
    strategy:
      matrix:
        arch: [i686, x86_64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MinGW-w64
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends mingw-w64 || true

      - name: Download QVMs
        uses: actions/download-artifact@v4
        with:
          name: baseq3-qvms
          path: baseq3

      - name: Cross-compile engine
        run: |
          make \
            CC=${{ matrix.arch }}-w64-mingw32-gcc \
            STRIP=${{ matrix.arch }}-w64-mingw32-strip \
            PLATFORM=mingw32 \
            ARCH=${{ matrix.arch }}

      - name: Strip cross-compiled binaries
        run: |
          for f in build/release*/ioq3*.exe build/release*/renderer_opengl*.dll build/release*/cgame*.dll build/release*/qagame*.dll; do
            [ -f "$f" ] && ${ { matrix.arch } }-w64-mingw32-strip "$f"
          done || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ioq3ztm-windows-${{ matrix.arch }}
          path: |
            build/release*/ioq3*.exe
            build/release*/renderer_opengl*.dll
            build/release*/cgame*.dll
            build/release*/qagame*.dll
            baseq3/*.qvm
